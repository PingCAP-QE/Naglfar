syntax = "proto3";

package pb;

import "google/protobuf/empty.proto";

service ChaosDaemon {
  rpc SetTcs(TcsRequest) returns (google.protobuf.Empty) {}

  rpc FlushIPSets(IPSetsRequest) returns (google.protobuf.Empty) {}

  rpc SetIptablesChains(IptablesChainsRequest) returns (google.protobuf.Empty) {}

  rpc SetTimeOffset(TimeRequest) returns (google.protobuf.Empty) {}
  rpc RecoverTimeOffset(TimeRequest) returns (google.protobuf.Empty) {}

  rpc ContainerKill(ContainerRequest) returns (google.protobuf.Empty) {}
  rpc ContainerGetPid (ContainerRequest) returns (ContainerResponse) {}

  rpc ExecStressors (ExecStressRequest) returns (ExecStressResponse) {}
  rpc CancelStressors (CancelStressRequest) returns (google.protobuf.Empty) {}

  rpc ApplyIoChaos(ApplyIoChaosRequest) returns (ApplyIoChaosResponse) {}

  rpc SetDNSServer (SetDNSServerRequest) returns (google.protobuf.Empty) {}
}

message TcHandle {
  uint32 major = 1;
  uint32 minor = 2;
}

message ContainerRequest{
  ContainerAction action = 1;
  string container_id = 2;
}

message ContainerResponse{
 uint32 pid = 1;
}

message NetemRequest {
  Netem netem = 1;
  string container_id = 2;
  TcHandle handle = 3;
  TcHandle parent = 4;
}

message Netem {
  uint32 time = 1;
  uint32 jitter = 2;
  float delay_corr = 3;
  uint32 limit = 4;
  float loss = 5;
  float loss_corr = 6;
  uint32 gap = 7;
  float duplicate = 8;
  float duplicate_corr = 9;
  float reorder = 10;
  float reorder_corr = 11;
  float corrupt = 12;
  float corrupt_corr = 13;
  TcHandle parent = 14;
  TcHandle handle = 15;
}

message TbfRequest {
  Tbf tbf = 1;
  string container_id = 2;
}

message Tbf {
  uint64 rate = 1;
  uint32 limit = 2;
  uint32 buffer = 3;
  uint64 peak_rate = 4;
  uint32 min_burst = 5;
}

message QdiscRequest {
  Qdisc qdisc = 1;
  string container_id = 2;
}

message Qdisc {
  TcHandle parent = 1;
  TcHandle handle = 2;
  string type = 3;
  repeated string args = 4;
}

message EmatchFilterRequest {
    EmatchFilter filter = 1;
    string container_id = 2;
}

message EmatchFilter {
  string match = 1;
  TcHandle parent = 2;
  TcHandle classid = 3;
}

message TcFilterRequest {
  TcFilter filter = 1;
  string container_id = 2;
}

message TcFilter {
  TcHandle parent = 1;
}

message IPSetsRequest {
  repeated IPSet ipsets = 1;
  string container_id = 2;
}

message IPSet {
  string name = 1;
  repeated string cidrs = 2;
}

message IptablesChainsRequest {
  repeated Chain chains = 1;
  string container_id = 2;
}

message Chain {
  string name = 1;
  enum Direction {
    INPUT = 0;
    OUTPUT = 1;
  }
  Direction direction = 2;
  repeated string ipsets = 3;
  string target = 4;
  string protocol = 5;
  string source_ports = 6;
  string destination_ports = 7;
}

message TimeRequest {
  string container_id = 1;
  int64 sec = 2;
  int64 nsec = 3;
  uint64 clk_ids_mask = 4;
}

message ContainerAction {
  enum Action {
      KILL = 0;
      GETPID = 1;
  }
  Action action = 1;
}

message ExecStressRequest {
  enum Scope {
    CONTAINER = 0;
    POD = 1;
  }
  Scope scope = 1;
  string target = 2;
  string stressors = 3;
}

message ExecStressResponse {
  string instance = 1;
  int64 startTime = 2;
}

message CancelStressRequest {
  string instance = 1;
  int64 startTime = 2;
}

message ApplyIoChaosRequest {
  string actions = 1;
  string volume = 2;
  string container_id = 3;

  int64 instance = 4;
  int64 startTime = 5;
}

message ApplyIoChaosResponse {
  int64 instance = 1;
  int64 startTime = 2;
}

message TcsRequest {
  repeated Tc tcs = 1;
  string container_id = 2;
  string device = 3;
}

message Tc {
  enum Type {
    NETEM = 0;
    BANDWIDTH = 1;
  }
  Type type = 1;
  Netem netem = 2;
  Tbf tbf = 3;
  string ipset = 4;
  string protocol = 5;
  string source_port = 6;
  string egress_port = 7;
}

message SetDNSServerRequest {
  string container_id = 1;
  string dns_server = 2;
  bool enable = 3;
}